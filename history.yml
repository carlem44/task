# Add the Cloud SDK distribution URI as a package source\
echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\

# Import the Google Cloud Platform public key\
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\

# Update the package list and install the Cloud SDK\
sudo apt-get update && sudo apt-get install google-cloud-sdk

gcloud components install kubectl
sudo apt-get install kubectl

gcloud container clusters get-credentials cluster-1 --zone us-central1-a --project kubernetes-54610
kubectl proxy

gcloud auth login

gcloud components install kubectl
sudo apt-get install kubectl
udo apt autoremove
sudo apt autoremove
sudo apt-get install kubectl

mkdir zadanie

cd zadanie

git clone https://github.com/drhelius/docker-helloworld-python-microservice.git

cd docker-helloworld-python-microservice

export PROJECT_ID="$(gcloud config get-value project -q)"
echo $PROJECT_ID
gcloud config set project kubernetes-12345
gcloud config set compute/zone us-central1-a
export PROJECT_ID="$(gcloud config get-value project -q)"
docker build -t gcr.io/${PROJECT_ID}/hello-app:v1 .
sudo docker build -t gcr.io/${PROJECT_ID}/hello-app:v1 .
docker images
sudo docker images
gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v1
sudo gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v1
gcloud config set project kubernetes-54610
sudo docker build -t gcr.io/${PROJECT_ID}/hello-app:v1 .
sudo docker images
hist
history
echo $PROJECT_ID
gcloud config set project kubernetes-54610
export PROJECT_ID="$(gcloud config get-value project -q)"
echo $PROJECT_ID
sudo docker build -t gcr.io/${PROJECT_ID}/hello-app:v1 .
sudo docker images
gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v1
sudo gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v1
docker run --rm -p 8080:8080 gcr.io/${PROJECT_ID}/hello-app:v1
sudo docker run --rm -p 8080:8080 gcr.io/${PROJECT_ID}/hello-app:v1
sudo docker run --rm -p 8085:8080 gcr.io/${PROJECT_ID}/hello-app:v1
gcloud container clusters create hello-cluster --num-nodes=3
gcloud compute instances list
gcloud container clusters get-credentials hello-cluster
kubectl run hello-web --image=gcr.io/${PROJECT_ID}/hello-app:v1 --port 8080
kubectl get pods
kubectl expose deployment hello-web --type=LoadBalancer --port 80 --target-port 8080
kubectl get pods
kubectl get service\
NAME         CLUSTER-IP      EXTERNAL-IP     PORT(S)          AGE\
hello-web    10.3.251.122    203.0.113.0     80:30877/TCP     3d
kubectl get service
kubectl scale deployment hello-web --replicas=3
kubectl get pods
kubectl get deployment hello-web
kubectl get pods

vim hello.py

docker build -t gcr.io/${PROJECT_ID}/hello-app:v2 .
sudo docker build -t gcr.io/${PROJECT_ID}/hello-app:v2 .
gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v2
sudo gcloud docker -- push gcr.io/${PROJECT_ID}/hello-app:v2
kubectl set image deployment/hello-web hello-web=gcr.io/${PROJECT_ID}/hello-app:v2

kubectl delete service hello-web
gcloud compute forwarding-rules list
gcloud container clusters delete hello-cluster
